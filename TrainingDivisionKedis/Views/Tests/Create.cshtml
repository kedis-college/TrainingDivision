@model TrainingDivisionKedis.BLL.DTO.TestsAdmin.TestCreateDto

@{
    ViewData["Title"] = "Create";
}

<h1>Тесты</h1>

<h4>Новый</h4>
<hr />

<partial name="../Shared/_StatusMessages.cshtml" />

<p><b>Дисциплина:</b> @Model.SubjectName &emsp; <b>Семестр:</b> @Model.TermId </p>

<form asp-action="Create" id="test-form" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(x => x.SubjectId)
    @Html.HiddenFor(x => x.TermId)
    
    <div id="test-form-inputs">
        <div class="form-group">
            <label asp-for="Name" class="control-label"></label>
            <textarea asp-for="Name" class="form-control" maxlength="250"></textarea>
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-row">
            <div class="form-group col-sm-3">
                <label asp-for="QuestionsTotal" class="control-label"></label>
                <input asp-for="QuestionsTotal" class="form-control" value="@Model.Questions.Count" disabled />
                <span asp-validation-for="QuestionsTotal" class="text-danger"></span>
            </div>
            <div class="form-group col-sm-3">
                <label asp-for="QuestionsPerTest" class="control-label"></label>
                <input asp-for="QuestionsPerTest" class="form-control" max="@Model.Questions.Count" min="1" />
                <span asp-validation-for="QuestionsPerTest" class="text-danger"></span>
            </div>
            <div class="form-group col-sm-3">
                <label class="control-label">Продолжительность (мин.)</label>
                <input asp-for="TimeLimit" class="form-control"/>
                <span asp-validation-for="TimeLimit" class="text-danger"></span>
            </div>
        </div>
        <h5> Вопросы</h5>
        <hr />
        @for (var questionInd = 0; questionInd < Model?.Questions?.Count; questionInd++)
        {
        <div class="question">
            <div class="form-group">
                <label class="control-label d-flex question-number">Вопрос </label> 
                <textarea asp-for="@Model.Questions[questionInd].Text" class="form-control question-text" placeholder="Введите вопрос" maxlength="500"></textarea>
                <span asp-validation-for="@Model.Questions[questionInd].Text" class="text-danger question-error"></span>
            </div>
            @for (var answerInd = 0; answerInd < Model.Questions[questionInd].Answers.Count; answerInd ++)
            {
            <div class="form-group">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <input type="radio" value="@answerInd" aria-label="Radio button for following text input">
                        </div>
                    </div>
                    <input asp-for="@Model.Questions[questionInd].Answers[answerInd].Text" class="form-control answer-text" placeholder="Введите ответ" maxlength="200" />
                </div>
                <span asp-validation-for="@Model.Questions[questionInd].Answers[answerInd].Text" class="text-danger answer-error"></span>
            </div>
            }
        </div>
        }
    </div>
    <div class="form-group">
        <button class="btn btn-success" id="add-question-btn">Добавить вопрос</button>
    </div>
    <div class="form-group">
        <input type="submit" value="Сохранить тест" class="btn btn-primary" />
    </div>

</form>

<div class="mb-3">
    <a asp-action="List" asp-route-subjectId="@Model.SubjectId" asp-route-termId="@Model.TermId">Назад к списку</a>
</div>

@section Scripts {
    <script>
        const NewQuestion =  `<div class="question">
            <div class="form-group">
                <label class="control-label d-flex question-number">Вопрос </label>
                <textarea class="form-control question-text" placeholder="Введите вопрос" maxlength="500" data-val="true" data-val-maxlength="The field Вопрос must be a string or array type with a maximum length of '500'." data-val-maxlength-max="500" data-val-minlength="The field Вопрос must be a string or array type with a minimum length of '1'." data-val-minlength-min="1" data-val-required="Поле Вопрос должно быть заполнено" id="Questions[0].Text" name="Questions[0].Text"></textarea>
                <span class="text-danger field-validation-valid question-error" data-valmsg-for="question.Text" data-valmsg-replace="true"></span>
            </div>
            <div class="form-group">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <input type="radio" name="correctAnswer-" value="0" aria-label="Radio button for following text input">
                        </div>
                    </div>
                    <input class="form-control answer-text input-validation-error" placeholder="Введите ответ" maxlength="200" type="text" data-val="true" data-val-maxlength="The field Ответ must be a string or array type with a maximum length of '200'." data-val-maxlength-max="200" data-val-minlength="The field Ответ must be a string or array type with a minimum length of '1'." data-val-minlength-min="1" data-val-required="Поле Ответ должно быть заполнено" id="question_Answers_0__Text" name="Questions[0].Answers[0].Text" value="" aria-describedby="question_Answers_0__Text-error" aria-invalid="true">
                </div>
                <span class="text-danger answer-error field-validation-valid" data-valmsg-for="question.Answers[0].Text" data-valmsg-replace="true"></span>
           </div>
           <div class="form-group">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <input type="radio" name="correctAnswer-" value="1" aria-label="Radio button for following text input">
                        </div>
                    </div>
                    <input class="form-control answer-text input-validation-error" placeholder="Введите ответ" maxlength="200" type="text" data-val="true" data-val-maxlength="The field Ответ must be a string or array type with a maximum length of '200'." data-val-maxlength-max="200" data-val-minlength="The field Ответ must be a string or array type with a minimum length of '1'." data-val-minlength-min="1" data-val-required="Поле Ответ должно быть заполнено" id="question_Answers_0__Text" name="Questions[0].Answers[1].Text" value="" aria-describedby="question_Answers_0__Text-error" aria-invalid="true">
                </div>
                <span class="text-danger answer-error field-validation-valid" data-valmsg-for="question.Answers[1].Text" data-valmsg-replace="true"></span>
           </div>
           <div class="form-group">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <input type="radio" name="correctAnswer-" value="2" aria-label="Radio button for following text input">
                        </div>
                    </div>
                    <input class="form-control answer-text input-validation-error" placeholder="Введите ответ" maxlength="200" type="text" data-val="true" data-val-maxlength="The field Ответ must be a string or array type with a maximum length of '200'." data-val-maxlength-max="200" data-val-minlength="The field Ответ must be a string or array type with a minimum length of '1'." data-val-minlength-min="1" data-val-required="Поле Ответ должно быть заполнено" id="question_Answers_0__Text" name="Questions[0].Answers[2].Text" value="" aria-describedby="question_Answers_0__Text-error" aria-invalid="true">
                </div>
                <span class="text-danger answer-error field-validation-valid" data-valmsg-for="question.Answers[2].Text" data-valmsg-replace="true"></span>
           </div>
           <div class="form-group">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <input type="radio" name="correctAnswer-" value="3" aria-label="Radio button for following text input">
                        </div>
                    </div>
                    <input class="form-control answer-text input-validation-error" placeholder="Введите ответ" maxlength="200" type="text" data-val="true" data-val-maxlength="The field Ответ must be a string or array type with a maximum length of '200'." data-val-maxlength-max="200" data-val-minlength="The field Ответ must be a string or array type with a minimum length of '1'." data-val-minlength-min="1" data-val-required="Поле Ответ должно быть заполнено" id="question_Answers_0__Text" name="Questions[0].Answers[3].Text" value="" aria-describedby="question_Answers_0__Text-error" aria-invalid="true">
                </div>
                <span class="text-danger answer-error field-validation-valid" data-valmsg-for="question.Answers[3].Text" data-valmsg-replace="true"></span>
           </div>
           </div>
           `

        const setQuestionNumbers = function () {
            let i = 0
            $('.question').each(function () {
                $(this).find('.question-number').text(`Вопрос ${i + 1}`)
                if (i > 0) {
                    $(this).find('.question-number').append(`<span class="ml-auto text-secondary remove-question-btn"><i class="fas fa-trash"></i></span>`)                   
                }
                $(this).find('input[type=radio]').prop('name', `Questions[${i}].CorrectAnswerId`)
                $(this).find('input[type=radio]').prop('id', `Questions[${i}].CorrectAnswerId`)
                $(this).find('.question-text').prop('name', `Questions[${i}].Text`)
                $(this).find('.question-text').prop('id', `Questions[${i}].Text`)
                $(this).find('.question-error').attr('data-valmsg-for', `Questions[${i}].Text`)
                $(this).find('.answer-text').each(function (ind) {
                    $(this).prop('name', `Questions[${i}].Answers[${ind}].Text`)
                })
                $(this).find('.answer-error').each(function (ind) {
                    $(this).attr('data-valmsg-for', `Questions[${i}].Answers[${ind}].Text`)
                })
                i++
            });
            $('.remove-question-btn').on('click', function () {
                event.preventDefault();
                const answer = confirm('Вы действительно хотите удалить вопрос?')
                if (answer) {
                    $(this).parents('.question').remove()
                    $('input[name=QuestionsTotal]').val($('input[name=QuestionsTotal]').val() * 1 - 1)
                    refreshQuestions();
                }
            })
        }

        const refreshQuestions = function () {
            setQuestionNumbers();
            $('input[name=QuestionsPerTest]').prop('max', $('input[name=QuestionsTotal]').val())   
        }

        $(document).ready(function () {
            setQuestionNumbers();

            $('#add-question-btn').on('click', function () {
                event.preventDefault();
                $('#test-form-inputs').append(NewQuestion);              
                $('input[name=QuestionsTotal]').val($('input[name=QuestionsTotal]').val() * 1 + 1)
                refreshQuestions()
                            
            })

            $.extend($.validator.messages, {
                min: 'Значение должно быть равно или больше {0}',
                max: 'Значение должно быть равно или меньше {0}'
            });
        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}
